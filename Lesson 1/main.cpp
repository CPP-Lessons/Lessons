#include<iostream>

int GLOBAL;
int GLOBAL_B = 1;

int main() {
    { // TYPES
        // Логический
        bool b = true; // true/false
        // Символьный
        char ch = 'a'; // Несмотря на то, что тип символьный, char хранит число — код символа в таблице ASCII.
        // Целочисленный
        int i = 0;          // unsigned int Все эти типы существуют с модификацией unsigned
        long l = 0;         // unsigned long
        long long ll = 0;   // unsigned long long
        // Вещественный (с плавающей запятой)
        float f = 0.0f;
        double d = 0.0f;
    }
    {
        int a;      // объявление (мы просто объявили переменную и ничего не положили туда)
        int b = 3;  // инициализация (объявили переменную + положили что-то)
        a = b;      // присваивание (уже в объявленную переменную положили что-то)

        auto c = 4; // автоматическое выведение типа, компилятор сам поймет, что тим c - int
        //  auto d;     // ОШИБКА КОМПИЛЯЦИИ
        //  d = 2       // переменная обязана быть проинициализирована, чтобы компилятор мог вывести тип

        double e = b; // неявное преобразование типов тип int -> double, такого стоит избегать, можно выстрелить себе в ногу
    }
    {
        int a = 1;      // переменная a типа int
        int* b = &a;    // ссылка на ячейку памяти в которой лежит а(1)
        int** c = &b;   // ссылка на ячейку памяти в которой лежит ссылка на ячейку памяти в которой лежит a(1)

        int*** d = &c;      // так
        int**** e = &d;     // можно
        int***** f = &e;    // продолжать
        int****** g = &f;   // до
        int******* h = &g;  // бесконечности
    }
    return 0;
}